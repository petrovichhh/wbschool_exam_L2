package main

/*
	Реализовать паттерн «стратегия».
Объяснить применимость паттерна, его плюсы и минусы, а также реальные примеры использования данного примера на практике.
	https://en.wikipedia.org/wiki/Strategy_pattern
*/
// interface поведение оружия
type WeaponBehavior interface {
	useWeapon()
}

type SwordBehavior struct {
	damage int
}

func (s SwordBehavior) useWeapon() {
	//TODO implement me
	panic("implement me")
}

func main() {

}

/*Паттерн стратегия определяет сеймейство алгоритмов инкапсулирует и обеспечивает их взаимозаменяемость. Паттерн
позволяет модифицировать алгоритмы независимо от их использования на стороне клиента
минус паттерна стра
*/
/*Плюсы:
	Можно отделить динамически изменяемые данные от тех данных которые изменяться не будут
 И изменять поведение во время выполнения
Изолирует код и данные алгоритмов от остальных классов.
Уход от наследования к композиции.
Реализует принцип открытости/закрытости.*/

/*Минусы:
Усложняет программу за счёт дополнительных классов.
Происходит усложнение кодовой базы за счет получения дополнительной гибкости в проекте
Поэтому нужно использовать паттерны там где они Необходимы*/
